---
- name  : Test connection to servers
  hosts : all
  become: yes

  vars:
    ansible_become_pass : !vault |
          $ANSIBLE_VAULT;1.1;AES256
          39646465643632373230633338303539323239343934663463333536303361383633346138306333
          3662323234613834643232633437306163383733633866370a656438613138663666356331383864
          33666634323030313164623263313765626162656130373734653338326336376537336132616138
          3931343030343965390a613636643938366464306634333734323930633934356262653562393665
          3335
    users:
      cloudru:
        username: cloudru
        userpassword: cloudpass
    file_path:
      source_file: ./ssh_keys/authorized_keys
      destin_file: /home/femakc/.ssh/test_copy_file/


  tasks:
#    - name: Ping my servers
#      ping:

    - name: Добавить пользователя 'cloudru'
      user:
        name: cloudru
        password: "{{ 'cloudpass' | password_hash }}"
        shell: /bin/bash
  #      groups: wheel
        append: yes

    - name: Создать 2048-битовый SSH ключ для cloudru в ~cloudru/.ssh/id_rsa
      user:
        name: cloudru
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa

    - name: Установить authorized key из файла id_rsa.pub
      authorized_key:
        user: cloudru
        state: present
        key: "{{ lookup('file', '/home/femakc/PycharmProjects/cloudru_test_task/playbook/ssh_keys/cloud_id_rsa.pub') }}"

#    - name: Disable login by password and allow login only with publickey
#      ansible.builtin.lineinfile:
#        path: /etc/ssh/sshd_config
#        regexp: '^#?PasswordAuthentication'
#        line: 'PasswordAuthentication no'

    - name:  Disable allow login only with publickey.publickey
      lineinfile: dest=/etc/ssh/sshd_config regexp='^#?AuthenticationMethods' line='AuthenticationMethods publickey'

    - name: Disable login by password
      lineinfile: dest=/etc/ssh/sshd_config regexp='^#?PasswordAuthentication' line='PasswordAuthentication no'
#      lineinfile: dest=/etc/ssh/sshd_config regexp='^#?AuthenticationMethods' line='AuthenticationMethods publickey'
#      lineinfile: dest=/etc/ssh/sshd_config regexp='^#?PasswordAuthentication' line='PasswordAuthentication no'
#    - lineinfile: dest=/etc/ssh/sshd_config regexp='^#?ChallengeResponseAuthentication' line='ChallengeResponseAuthentication no'
#    - lineinfile: dest=/etc/ssh/sshd_config regexp='^#?PubkeyAuthentication' line='PubkeyAuthentication yes'

      notify:
      - restart sshd

  handlers:
    - name: restart sshd
      service: name=sshd state=restarted
#    - name: Copy ssh keys
#      ansible.builtin.copy:
#        src: "{{ file_path.source_file }}"
#        dest: "{{ file_path.destin_file }}"
#
#    - name: Create user with password
#      ansible.builtin.user:
#        name: "{{ users.cloudru.username }}"
#        password: "{{ users.cloudru.userpassword }}"
